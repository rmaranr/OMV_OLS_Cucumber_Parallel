package pages;import com.aventstack.extentreports.ExtentTest;import io.cucumber.java.Scenario;import org.openqa.selenium.By;import org.openqa.selenium.Keys;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import utilities.ui.BasePage;import java.util.Base64;import java.util.List;public class GmailPage {    //Locators of gmail page    private static final By txtEmailOrPhone = By.id("identifierId");    private static final By btnNext = By.xpath("//span[text()='Next']");    private static final By txtUserName = By.name("username");    private static final By txtPassWord = By.name("password");    private static final By btnSignIn = By.id("okta-signin-submit");    private static final By txtSearchBox = By.cssSelector("input[name='q']");    private static final By generatedEmailOfExpiredChangePassword = By            .xpath("//td[@class='xY a4W']/div[@class='xS']/div[@class='xT']/div[2]/span[@class='bog']/span[contains(text(),'Z Business Online password change')]");    private static final By subEmail = By.xpath("(//span[@name='zenergy-no-reply@wexinc.co.uk'])");    private static final By expandSubEmailContext = By.xpath("(//img[@class='ajT'])");    private static final By liHere = By.xpath("//div[@class='im']/a[contains(text(),'here')]");    private static final By messageOfExpiredChangePasswordEmail = By.xpath("//div[@class='gs']/div[3]/div[3]/div/div/div[2]/div/p");    private static final By userNameDisplayedInExpiredChangePasswordEmail = By.xpath("//div[@class='gs']/div[3]/div[3]/div/div/div[2]/div/p/text()[1]");    private static final By btnCompose = By.xpath("//div[contains(text(),'Compose')]");    private static final By iconAttachment = By.id(":pv");    private WebDriver driver;    private BasePage basePage;    public Scenario logger;    /* Constructor to get the driver object */    public GmailPage(WebDriver driver) {        this.driver = driver;        basePage = new BasePage(driver);    }    /*    Method to convert the encoded password to decode     */    String getDecodePassword(String encodedPassword) {        byte[] decyptedPasswordBytes = Base64.getDecoder().decode(encodedPassword);        return new String(decyptedPasswordBytes);    }    /*    Method to login gmail using valid username and password     */    public void loginToGmail(Scenario logger, String userName, String passWord) {        driver.navigate().to("https://www.gmail.com");        basePage.userTypeIntoTextField(logger, txtEmailOrPhone, userName);        basePage.userClick(logger, btnNext);        basePage.userTypeIntoTextField(logger, txtUserName, userName);        basePage.userTypeIntoTextField(logger, txtPassWord, getDecodePassword(passWord));        basePage.userClick(logger, btnSignIn);    }    /*    Method to click on generated email after hotel booking     */    public void resetPassword(Scenario logger, String searchText, String subject) {        final By generatedEmailOfForgotPassword = By                .xpath("//td[@class='xY a4W']/div[@class='xS']/div[@class='xT']/div[2]/span[@class='bog']/span[contains(text(),'"+subject+"')]");        clickOnNewlyGeneratedEmailBasedOnItsSubject(logger, searchText, generatedEmailOfForgotPassword);        basePage.userClick(logger, liHere);        System.out.println("Sucessfully clicked on here link");    }    /*    Method to click newly generated email based searching email using its subject     */    public void clickOnNewlyGeneratedEmailBasedOnItsSubject(Scenario logger, String searchText, By generatedEmail) {        basePage.userTypeIntoTextField(logger, txtSearchBox, searchText);        driver.findElement(txtSearchBox).sendKeys(Keys.ENTER);        try {            Thread.sleep(5000);        } catch (Exception e) {        }        basePage.userClick(logger, generatedEmail);        if (basePage.whetherElementPresent(logger, expandSubEmailContext)) {            List<WebElement> subEmailList = basePage.getListOfElements(logger, expandSubEmailContext);            String lastSubEmailElement = "(//img[@class='ajT'])" + "[" + subEmailList.size() + "]";            basePage.userClick(logger, By.xpath(lastSubEmailElement));        }    }    /*    Method to validate displayed message in expiry change password email     */    public void validateMessageInExpiryChangePasswordEmail(Scenario logger, String message, String userName, String searchText) {        clickOnNewlyGeneratedEmailBasedOnItsSubject(logger, searchText, generatedEmailOfExpiredChangePassword);        //        basePage.assertTwoStrings(logger, message, basePage.userGetTextFromWebElement(logger,messageOfExpiredChangePasswordEmail));        //        basePage.assertTwoStrings(logger, userName, basePage.userGetTextFromWebElement(logger, userNameDisplayedInExpiredChangePasswordEmail));    }    /*    Method to send an email to few people with attachment     */    public void sendAnEmailWithAttachment(Scenario logger) {        basePage.userClick(logger, btnCompose);        //        String path = System.getProperty("user.dir")+        //        basePage.userClick(logger,iconAttachment);    }}