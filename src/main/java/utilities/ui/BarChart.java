//package utilities.ui;////import org.apache.poi.xssf.usermodel.XSSFSheet;//import org.apache.poi.xssf.usermodel.XSSFWorkbook;//import org.jfree.chart.ChartFactory;//import org.jfree.chart.ChartPanel;//import org.jfree.chart.ChartUtilities;//import org.jfree.chart.JFreeChart;//import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;//import org.jfree.chart.plot.CategoryPlot;//import org.jfree.chart.plot.PlotOrientation;//import org.jfree.chart.renderer.category.BarRenderer;//import org.jfree.chart.renderer.category.StandardBarPainter;//import org.jfree.data.category.CategoryDataset;//import org.jfree.data.category.DefaultCategoryDataset;//import utilities.api.BaseUtils;////import javax.swing.*;//import java.awt.*;//import java.io.File;//import java.text.DecimalFormat;//import java.util.*;//import java.util.List;////public class BarChart extends JFrame {////    private static final long serialVersionUID = 1L;////    public BarChart(String appTitle) {//        super(appTitle);////        // Create Dataset//        CategoryDataset dataset = createDataset();////        //Create chart//        JFreeChart chart= ChartFactory.createBarChart(//                "SummaryReport | OLS-Reskin", //Chart Title//                "Module", // Category axis//                "Test case count for each status", // Value axis//                dataset,//                PlotOrientation.VERTICAL,//                true,true,false//        );////////////////////////////////////////////////////////        CategoryPlot plot = (CategoryPlot) chart.getPlot();//        BarRenderer renderer = ((BarRenderer) plot.getRenderer());//        /* Deactivates 3D effect and shadow *///        renderer.setShadowVisible(false);//        renderer.setBarPainter(new StandardBarPainter());//        /* Sets the border and the border color *///        renderer.setDrawBarOutline(true);//        renderer.setBaseOutlinePaint(Color.BLACK);//        /* Gap bewtween the bars (value in percent) *///        renderer.setItemMargin(0.0);//        renderer.setItemLabelAnchorOffset(6);//        /* set value label text format *///        StandardCategoryItemLabelGenerator labelGen = new StandardCategoryItemLabelGenerator("{2}", new DecimalFormat("0.00"));//        renderer.setBaseItemLabelGenerator(labelGen);//        renderer.setBaseItemLabelsVisible(true);/////////////////////////////////////////////////////////        ChartPanel panel=new ChartPanel(chart);//        int width = 800;    /* Width of the image *///        int height = 400;   /* Height of the image *///        File BarChart = new File( "./Reports/AutomationSummaryReport.png" );//        try {//            ChartUtilities.saveChartAsJPEG(BarChart, chart, width, height);//        }catch(Exception e){////        }//        setContentPane(panel);//    }////    private CategoryDataset createDataset() {////        DefaultCategoryDataset dataset = new DefaultCategoryDataset();//        BaseUtils baseUtils = new BaseUtils();//        Properties properties = baseUtils.testExecutionCountProperties;//        Map<String, Integer> testExceutionCountProperties = new HashMap<String, Integer>();//        for (String key : properties.stringPropertyNames()) {//            String value = properties.getProperty(key);//            testExceutionCountProperties.put(key, Integer.valueOf(value));//        }//        String keyValues[] = null;//        List<String> moduleNameLi = new ArrayList<>();//        List<String> testResultLi = new ArrayList<>();//        for (Map.Entry<String, Integer> test : testExceutionCountProperties.entrySet()) {//            keyValues = test.getKey().split("-");//            moduleNameLi.add(keyValues[0]);//            testResultLi.add(keyValues[1]);//        }//        String moduleName = "";//        String testResultName = "";//        for (Map.Entry<String, Integer> test : testExceutionCountProperties.entrySet()) {//            keyValues = test.getKey().split("-");//            moduleName = keyValues[0];//            testResultName = keyValues[1];//            if(testResultName.equals("Passed")){//                for(int i=0;i<=moduleNameLi.size()-1;i++){//                    if(moduleName.equals(moduleNameLi.get(i))){//                        dataset.addValue(test.getValue(), "Passed", moduleNameLi.get(i));//                        break;//                    }//                }//            }else if(testResultName.equals("Failed")){//                for(int i=0;i<=moduleNameLi.size()-1;i++){//                    if(moduleName.equals(moduleNameLi.get(i))){//                        dataset.addValue(test.getValue(), "Failed", moduleNameLi.get(i));//                        break;//                    }//                }//            }else if(testResultName.equals("Skipped")){//                for(int i=0;i<=moduleNameLi.size()-1;i++){//                    if(moduleName.equals(moduleNameLi.get(i))){//                        dataset.addValue(test.getValue(), "Skipped", moduleNameLi.get(i));//                        break;//                    }//                }//            }//        }//       /* // Population in 2005//        dataset.addValue(10, "USA", "2005");//        dataset.addValue(15, "India", "2005");//        dataset.addValue(20, "China", "2005");////        // Population in 2010//        dataset.addValue(15, "USA", "2010");//        dataset.addValue(20, "India", "2010");//        dataset.addValue(25, "China", "2010");////        // Population in 2015//        dataset.addValue(20, "USA", "2015");//        dataset.addValue(25, "India", "2015");//        dataset.addValue(30, "China", "2015");*/////        return dataset;//    }////    public static void chart() throws Exception {//        SwingUtilities.invokeAndWait(()->{//            BarChart example=new BarChart("Bar Chart Window");//            example.setSize(800, 400);//            example.setLocationRelativeTo(null);//            example.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);////            example.setVisible(true);//        });//    }//}